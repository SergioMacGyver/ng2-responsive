/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../../../../src/app/ng2-responsive/browsers/browsers-directives';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
export class Wrapper_IsChrome {
  context:import0.IsChrome;
  changed:boolean;
  /*private*/ _isChrome:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isChrome = import1.UNINITIALIZED;
    this.context = new import0.IsChrome(p0,p1,p2);
  }
  check_isChrome(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isChrome,currValue))) {
      this.changed = true;
      this.context.isChrome = currValue;
      this._isChrome = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsFirefox {
  context:import0.IsFirefox;
  changed:boolean;
  /*private*/ _isFirefox:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isFirefox = import1.UNINITIALIZED;
    this.context = new import0.IsFirefox(p0,p1,p2);
  }
  check_isFirefox(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isFirefox,currValue))) {
      this.changed = true;
      this.context.isFirefox = currValue;
      this._isFirefox = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsSafari {
  context:import0.IsSafari;
  changed:boolean;
  /*private*/ _isSafari:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isSafari = import1.UNINITIALIZED;
    this.context = new import0.IsSafari(p0,p1,p2);
  }
  check_isSafari(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isSafari,currValue))) {
      this.changed = true;
      this.context.isSafari = currValue;
      this._isSafari = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsOpera {
  context:import0.IsOpera;
  changed:boolean;
  /*private*/ _isOpera:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isOpera = import1.UNINITIALIZED;
    this.context = new import0.IsOpera(p0,p1,p2);
  }
  check_isOpera(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isOpera,currValue))) {
      this.changed = true;
      this.context.isOpera = currValue;
      this._isOpera = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsIE {
  context:import0.IsIE;
  changed:boolean;
  /*private*/ _isIE:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isIE = import1.UNINITIALIZED;
    this.context = new import0.IsIE(p0,p1,p2);
  }
  check_isIE(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isIE,currValue))) {
      this.changed = true;
      this.context.isIE = currValue;
      this._isIE = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_ShowItBrowser {
  context:import0.ShowItBrowser;
  changed:boolean;
  /*private*/ _showItBrowser:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._showItBrowser = import1.UNINITIALIZED;
    this.context = new import0.ShowItBrowser(p0,p1,p2);
  }
  check_showItBrowser(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._showItBrowser,currValue))) {
      this.changed = true;
      this.context.showItBrowser = currValue;
      this._showItBrowser = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_HideItBrowser {
  context:import0.HideItBrowser;
  changed:boolean;
  /*private*/ _hideItBrowser:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._hideItBrowser = import1.UNINITIALIZED;
    this.context = new import0.HideItBrowser(p0,p1,p2);
  }
  check_hideItBrowser(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._hideItBrowser,currValue))) {
      this.changed = true;
      this.context.hideItBrowser = currValue;
      this._hideItBrowser = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsIE9 {
  context:import0.IsIE9;
  changed:boolean;
  /*private*/ _isIE9:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isIE9 = import1.UNINITIALIZED;
    this.context = new import0.IsIE9(p0,p1,p2);
  }
  check_isIE9(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isIE9,currValue))) {
      this.changed = true;
      this.context.isIE9 = currValue;
      this._isIE9 = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsIE10 {
  context:import0.IsIE10;
  changed:boolean;
  /*private*/ _isIE10:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isIE10 = import1.UNINITIALIZED;
    this.context = new import0.IsIE10(p0,p1,p2);
  }
  check_isIE10(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isIE10,currValue))) {
      this.changed = true;
      this.context.isIE10 = currValue;
      this._isIE10 = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsIE11 {
  context:import0.IsIE11;
  changed:boolean;
  /*private*/ _isIE11:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isIE11 = import1.UNINITIALIZED;
    this.context = new import0.IsIE11(p0,p1,p2);
  }
  check_isIE11(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isIE11,currValue))) {
      this.changed = true;
      this.context.isIE11 = currValue;
      this._isIE11 = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_IsIE12 {
  context:import0.IsIE12;
  changed:boolean;
  /*private*/ _isIE12:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._isIE12 = import1.UNINITIALIZED;
    this.context = new import0.IsIE12(p0,p1,p2);
  }
  check_isIE12(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isIE12,currValue))) {
      this.changed = true;
      this.context.isIE12 = currValue;
      this._isIE12 = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_ShowIEVersion {
  context:import0.ShowIEVersion;
  changed:boolean;
  /*private*/ _showIEVersion:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._showIEVersion = import1.UNINITIALIZED;
    this.context = new import0.ShowIEVersion(p0,p1,p2);
  }
  check_showIEVersion(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._showIEVersion,currValue))) {
      this.changed = true;
      this.context.showIEVersion = currValue;
      this._showIEVersion = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_HideIEVersion {
  context:import0.HideIEVersion;
  changed:boolean;
  /*private*/ _hideIEVersion:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._hideIEVersion = import1.UNINITIALIZED;
    this.context = new import0.HideIEVersion(p0,p1,p2);
  }
  check_hideIEVersion(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._hideIEVersion,currValue))) {
      this.changed = true;
      this.context.hideIEVersion = currValue;
      this._hideIEVersion = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_BrowserInfo {
  context:import0.BrowserInfo;
  changed:boolean;
  /*private*/ _browserInfo:any;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this._browserInfo = import1.UNINITIALIZED;
    this.context = new import0.BrowserInfo(p0,p1);
  }
  check_browserInfo(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._browserInfo,currValue))) {
      this.changed = true;
      this.context.browserInfo = currValue;
      this._browserInfo = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}
export class Wrapper_IeInfo {
  context:import0.IeInfo;
  changed:boolean;
  /*private*/ _ieInfo:any;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this._ieInfo = import1.UNINITIALIZED;
    this.context = new import0.IeInfo(p0,p1);
  }
  check_ieInfo(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._ieInfo,currValue))) {
      this.changed = true;
      this.context.ieInfo = currValue;
      this._ieInfo = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}