/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = require('../../../../../src/app/ng2-responsive/devices/devices-directives');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import2 = require('@angular/core/src/linker/view_utils');
var Wrapper_IsSmartTv = (function () {
    function Wrapper_IsSmartTv(p0, p1, p2) {
        this.changed = false;
        this._isSmartTv = import1.UNINITIALIZED;
        this.context = new import0.IsSmartTv(p0, p1, p2);
    }
    Wrapper_IsSmartTv.prototype.check_isSmartTv = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isSmartTv, currValue))) {
            this.changed = true;
            this.context.isSmartTv = currValue;
            this._isSmartTv = currValue;
        }
    };
    Wrapper_IsSmartTv.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsSmartTv;
}());
exports.Wrapper_IsSmartTv = Wrapper_IsSmartTv;
var Wrapper_IsDesktop = (function () {
    function Wrapper_IsDesktop(p0, p1, p2) {
        this.changed = false;
        this._isDesktop = import1.UNINITIALIZED;
        this.context = new import0.IsDesktop(p0, p1, p2);
    }
    Wrapper_IsDesktop.prototype.check_isDesktop = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isDesktop, currValue))) {
            this.changed = true;
            this.context.isDesktop = currValue;
            this._isDesktop = currValue;
        }
    };
    Wrapper_IsDesktop.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsDesktop;
}());
exports.Wrapper_IsDesktop = Wrapper_IsDesktop;
var Wrapper_IsTablet = (function () {
    function Wrapper_IsTablet(p0, p1, p2) {
        this.changed = false;
        this._isTablet = import1.UNINITIALIZED;
        this.context = new import0.IsTablet(p0, p1, p2);
    }
    Wrapper_IsTablet.prototype.check_isTablet = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isTablet, currValue))) {
            this.changed = true;
            this.context.isTablet = currValue;
            this._isTablet = currValue;
        }
    };
    Wrapper_IsTablet.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsTablet;
}());
exports.Wrapper_IsTablet = Wrapper_IsTablet;
var Wrapper_IsMobile = (function () {
    function Wrapper_IsMobile(p0, p1, p2) {
        this.changed = false;
        this._isMobile = import1.UNINITIALIZED;
        this.context = new import0.IsMobile(p0, p1, p2);
    }
    Wrapper_IsMobile.prototype.check_isMobile = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isMobile, currValue))) {
            this.changed = true;
            this.context.isMobile = currValue;
            this._isMobile = currValue;
        }
    };
    Wrapper_IsMobile.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsMobile;
}());
exports.Wrapper_IsMobile = Wrapper_IsMobile;
var Wrapper_ShowItDevice = (function () {
    function Wrapper_ShowItDevice(p0, p1, p2) {
        this.changed = false;
        this._showItDevice = import1.UNINITIALIZED;
        this.context = new import0.ShowItDevice(p0, p1, p2);
    }
    Wrapper_ShowItDevice.prototype.check_showItDevice = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._showItDevice, currValue))) {
            this.changed = true;
            this.context.showItDevice = currValue;
            this._showItDevice = currValue;
        }
    };
    Wrapper_ShowItDevice.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_ShowItDevice;
}());
exports.Wrapper_ShowItDevice = Wrapper_ShowItDevice;
var Wrapper_HideItDevice = (function () {
    function Wrapper_HideItDevice(p0, p1, p2) {
        this.changed = false;
        this._hideItDevice = import1.UNINITIALIZED;
        this.context = new import0.HideItDevice(p0, p1, p2);
    }
    Wrapper_HideItDevice.prototype.check_hideItDevice = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._hideItDevice, currValue))) {
            this.changed = true;
            this.context.hideItDevice = currValue;
            this._hideItDevice = currValue;
        }
    };
    Wrapper_HideItDevice.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_HideItDevice;
}());
exports.Wrapper_HideItDevice = Wrapper_HideItDevice;
var Wrapper_IsIphone = (function () {
    function Wrapper_IsIphone(p0, p1, p2) {
        this.changed = false;
        this._isIphone = import1.UNINITIALIZED;
        this.context = new import0.IsIphone(p0, p1, p2);
    }
    Wrapper_IsIphone.prototype.check_isIphone = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isIphone, currValue))) {
            this.changed = true;
            this.context.isIphone = currValue;
            this._isIphone = currValue;
        }
    };
    Wrapper_IsIphone.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsIphone;
}());
exports.Wrapper_IsIphone = Wrapper_IsIphone;
var Wrapper_IsIpad = (function () {
    function Wrapper_IsIpad(p0, p1, p2) {
        this.changed = false;
        this._isIphone = import1.UNINITIALIZED;
        this.context = new import0.IsIpad(p0, p1, p2);
    }
    Wrapper_IsIpad.prototype.check_isIphone = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isIphone, currValue))) {
            this.changed = true;
            this.context.isIphone = currValue;
            this._isIphone = currValue;
        }
    };
    Wrapper_IsIpad.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsIpad;
}());
exports.Wrapper_IsIpad = Wrapper_IsIpad;
var Wrapper_IsAndroidMobile = (function () {
    function Wrapper_IsAndroidMobile(p0, p1, p2) {
        this.changed = false;
        this._isAndroidMobile = import1.UNINITIALIZED;
        this.context = new import0.IsAndroidMobile(p0, p1, p2);
    }
    Wrapper_IsAndroidMobile.prototype.check_isAndroidMobile = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isAndroidMobile, currValue))) {
            this.changed = true;
            this.context.isAndroidMobile = currValue;
            this._isAndroidMobile = currValue;
        }
    };
    Wrapper_IsAndroidMobile.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsAndroidMobile;
}());
exports.Wrapper_IsAndroidMobile = Wrapper_IsAndroidMobile;
var Wrapper_IsAndroidTablet = (function () {
    function Wrapper_IsAndroidTablet(p0, p1, p2) {
        this.changed = false;
        this._isAndroidTablet = import1.UNINITIALIZED;
        this.context = new import0.IsAndroidTablet(p0, p1, p2);
    }
    Wrapper_IsAndroidTablet.prototype.check_isAndroidTablet = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isAndroidTablet, currValue))) {
            this.changed = true;
            this.context.isAndroidTablet = currValue;
            this._isAndroidTablet = currValue;
        }
    };
    Wrapper_IsAndroidTablet.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsAndroidTablet;
}());
exports.Wrapper_IsAndroidTablet = Wrapper_IsAndroidTablet;
var Wrapper_IsWindowsPhone = (function () {
    function Wrapper_IsWindowsPhone(p0, p1, p2) {
        this.changed = false;
        this._isWindowsPhone = import1.UNINITIALIZED;
        this.context = new import0.IsWindowsPhone(p0, p1, p2);
    }
    Wrapper_IsWindowsPhone.prototype.check_isWindowsPhone = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isWindowsPhone, currValue))) {
            this.changed = true;
            this.context.isWindowsPhone = currValue;
            this._isWindowsPhone = currValue;
        }
    };
    Wrapper_IsWindowsPhone.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsWindowsPhone;
}());
exports.Wrapper_IsWindowsPhone = Wrapper_IsWindowsPhone;
var Wrapper_ShowItStandard = (function () {
    function Wrapper_ShowItStandard(p0, p1, p2) {
        this.changed = false;
        this._showItStandard = import1.UNINITIALIZED;
        this.context = new import0.ShowItStandard(p0, p1, p2);
    }
    Wrapper_ShowItStandard.prototype.check_showItStandard = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._showItStandard, currValue))) {
            this.changed = true;
            this.context.showItStandard = currValue;
            this._showItStandard = currValue;
        }
    };
    Wrapper_ShowItStandard.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_ShowItStandard;
}());
exports.Wrapper_ShowItStandard = Wrapper_ShowItStandard;
var Wrapper_HideItStandard = (function () {
    function Wrapper_HideItStandard(p0, p1, p2) {
        this.changed = false;
        this._hideItStandard = import1.UNINITIALIZED;
        this.context = new import0.HideItStandard(p0, p1, p2);
    }
    Wrapper_HideItStandard.prototype.check_hideItStandard = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._hideItStandard, currValue))) {
            this.changed = true;
            this.context.hideItStandard = currValue;
            this._hideItStandard = currValue;
        }
    };
    Wrapper_HideItStandard.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_HideItStandard;
}());
exports.Wrapper_HideItStandard = Wrapper_HideItStandard;
var Wrapper_IsPortrait = (function () {
    function Wrapper_IsPortrait(p0, p1, p2) {
        this.changed = false;
        this._isPortrait = import1.UNINITIALIZED;
        this.context = new import0.IsPortrait(p0, p1, p2);
    }
    Wrapper_IsPortrait.prototype.check_isPortrait = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isPortrait, currValue))) {
            this.changed = true;
            this.context.isPortrait = currValue;
            this._isPortrait = currValue;
        }
    };
    Wrapper_IsPortrait.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsPortrait;
}());
exports.Wrapper_IsPortrait = Wrapper_IsPortrait;
var Wrapper_IsLandscape = (function () {
    function Wrapper_IsLandscape(p0, p1, p2) {
        this.changed = false;
        this._isLandscape = import1.UNINITIALIZED;
        this.context = new import0.IsLandscape(p0, p1, p2);
    }
    Wrapper_IsLandscape.prototype.check_isLandscape = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isLandscape, currValue))) {
            this.changed = true;
            this.context.isLandscape = currValue;
            this._isLandscape = currValue;
        }
    };
    Wrapper_IsLandscape.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_IsLandscape;
}());
exports.Wrapper_IsLandscape = Wrapper_IsLandscape;
var Wrapper_DeviceInfo = (function () {
    function Wrapper_DeviceInfo(p0, p1) {
        this.changed = false;
        this.context = new import0.DeviceInfo(p0, p1);
    }
    Wrapper_DeviceInfo.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_DeviceInfo;
}());
exports.Wrapper_DeviceInfo = Wrapper_DeviceInfo;
var Wrapper_DeviceStandardInfo = (function () {
    function Wrapper_DeviceStandardInfo(p0, p1) {
        this.changed = false;
        this._deviceStandardInfo = import1.UNINITIALIZED;
        this.context = new import0.DeviceStandardInfo(p0, p1);
    }
    Wrapper_DeviceStandardInfo.prototype.check_deviceStandardInfo = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._deviceStandardInfo, currValue))) {
            this.changed = true;
            this.context.deviceStandardInfo = currValue;
            this._deviceStandardInfo = currValue;
        }
    };
    Wrapper_DeviceStandardInfo.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_DeviceStandardInfo;
}());
exports.Wrapper_DeviceStandardInfo = Wrapper_DeviceStandardInfo;
var Wrapper_OrientationInfo = (function () {
    function Wrapper_OrientationInfo(p0, p1) {
        this.changed = false;
        this.context = new import0.OrientationInfo(p0, p1);
    }
    Wrapper_OrientationInfo.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_OrientationInfo;
}());
exports.Wrapper_OrientationInfo = Wrapper_OrientationInfo;
//# sourceMappingURL=devices-directives.ngfactory.js.map