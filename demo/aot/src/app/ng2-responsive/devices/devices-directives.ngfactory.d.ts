/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
import * as import0 from '../../../../../src/app/ng2-responsive/devices/devices-directives';
import * as import3 from '@angular/core/src/linker/view';
export declare class Wrapper_IsSmartTv {
    context: import0.IsSmartTv;
    changed: boolean;
    _isSmartTv: any;
    constructor(p0: any, p1: any, p2: any);
    check_isSmartTv(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsDesktop {
    context: import0.IsDesktop;
    changed: boolean;
    _isDesktop: any;
    constructor(p0: any, p1: any, p2: any);
    check_isDesktop(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsTablet {
    context: import0.IsTablet;
    changed: boolean;
    _isTablet: any;
    constructor(p0: any, p1: any, p2: any);
    check_isTablet(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsMobile {
    context: import0.IsMobile;
    changed: boolean;
    _isMobile: any;
    constructor(p0: any, p1: any, p2: any);
    check_isMobile(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_ShowItDevice {
    context: import0.ShowItDevice;
    changed: boolean;
    _showItDevice: any;
    constructor(p0: any, p1: any, p2: any);
    check_showItDevice(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_HideItDevice {
    context: import0.HideItDevice;
    changed: boolean;
    _hideItDevice: any;
    constructor(p0: any, p1: any, p2: any);
    check_hideItDevice(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsIphone {
    context: import0.IsIphone;
    changed: boolean;
    _isIphone: any;
    constructor(p0: any, p1: any, p2: any);
    check_isIphone(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsIpad {
    context: import0.IsIpad;
    changed: boolean;
    _isIphone: any;
    constructor(p0: any, p1: any, p2: any);
    check_isIphone(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsAndroidMobile {
    context: import0.IsAndroidMobile;
    changed: boolean;
    _isAndroidMobile: any;
    constructor(p0: any, p1: any, p2: any);
    check_isAndroidMobile(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsAndroidTablet {
    context: import0.IsAndroidTablet;
    changed: boolean;
    _isAndroidTablet: any;
    constructor(p0: any, p1: any, p2: any);
    check_isAndroidTablet(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsWindowsPhone {
    context: import0.IsWindowsPhone;
    changed: boolean;
    _isWindowsPhone: any;
    constructor(p0: any, p1: any, p2: any);
    check_isWindowsPhone(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_ShowItStandard {
    context: import0.ShowItStandard;
    changed: boolean;
    _showItStandard: any;
    constructor(p0: any, p1: any, p2: any);
    check_showItStandard(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_HideItStandard {
    context: import0.HideItStandard;
    changed: boolean;
    _hideItStandard: any;
    constructor(p0: any, p1: any, p2: any);
    check_hideItStandard(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsPortrait {
    context: import0.IsPortrait;
    changed: boolean;
    _isPortrait: any;
    constructor(p0: any, p1: any, p2: any);
    check_isPortrait(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_IsLandscape {
    context: import0.IsLandscape;
    changed: boolean;
    _isLandscape: any;
    constructor(p0: any, p1: any, p2: any);
    check_isLandscape(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_DeviceInfo {
    context: import0.DeviceInfo;
    changed: boolean;
    constructor(p0: any, p1: any);
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_DeviceStandardInfo {
    context: import0.DeviceStandardInfo;
    changed: boolean;
    _deviceStandardInfo: any;
    constructor(p0: any, p1: any);
    check_deviceStandardInfo(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
export declare class Wrapper_OrientationInfo {
    context: import0.OrientationInfo;
    changed: boolean;
    constructor(p0: any, p1: any);
    detectChangesInternal(view: import3.AppView<any>, el: any, throwOnChange: boolean): boolean;
}
